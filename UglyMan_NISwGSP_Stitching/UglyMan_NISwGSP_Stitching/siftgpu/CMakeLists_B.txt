cmake_minimum_required(VERSION 3.0)

PROJECT(sift_gpu_demo)

MESSAGE("Build type: " ${CMAKE_BUILD_TYPE})
if(CMAKE_BUILD_TYPE STREQUAL "Debug" )
  #SET(CMAKE_BUILD_TYPE Debug)
  set(CMAKE_CXX_FLAGS "-O0 -g")
  MESSAGE("set debug option type" )
endif()

if(CMAKE_BUILD_TYPE STREQUAL "Debug" )
   MESSAGE("set -g flag")
   set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -Wall   -O0 -g -march=native ")
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall   -O0 -g -march=native")
   #set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -Wall  -O3 -march=native ")
   #set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall   -O3 -march=native")
else()
   MESSAGE("set -O3 flag")
   set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}  -Wall  -O3 -march=native ")
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall   -O3 -march=native")
endif()

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")
#add_definitions(-DEIGEN_HAS_OPENMP)
#FIND_PACKAGE(OpenMP REQUIRED)

#eigen
set(Eigen3_DIR /usr/local/share/eigen3/cmake)
FIND_PACKAGE(Eigen3 REQUIRED)
#include_directories(${EIGEN_INCLUDE_DIRS})
include_directories(${EIGEN3_INCLUDE_DIRS})


#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS} -DEIGEN_DONT_PARALLELIZE")


#opencv
find_package(OpenCV REQUIRED)	
include_directories(${OpenCV_INCLUDE_DIRS})


set(CUDA_ARCHS "86" CACHE STRING "List of architectures to generate device code for")
find_package(CUDA REQUIRED)
# dependent packages
find_package(CUDAToolkit REQUIRED)

#vlfeat
#FIND_LIBRARY(VLFEAT_LIBRARY NAMES vl HINTS /home/xxd/dyg/image_stitch/mine/NISwGSP/UglyMan_NISwGSP_Stitching/UglyMan_NISwGSP_Stitching/vlfeat-0.9.20/bin/glnxa64)
#FIND_LIBRARY(VLFEAT_LIBRARY NAMES vl HINTS ./vlfeat-0.9.20/bin/glnxa64)

FIND_LIBRARY(VLFEAT_LIBRARY vlfeat HINTS ./VLFeat/build)
FIND_LIBRARY(SIFTGPU_LIBRARY siftgpu HINTS ./lib)
FIND_LIBRARY(FLANN_LIBRARY flann HINTS ./FLANN/build)

include_directories(./lib)
include_directories(/home/xxd/dyg/image_stitch/mine/NISwGSP/UglyMan_NISwGSP_Stitching/UglyMan_NISwGSP_Stitching/siftgpu)
include_directories(./VLFeat)
include_directories(./util)
include_directories(./FLANN)

aux_source_directory(./util UTIL_SRC)

add_executable(sift_gpu_demo  siftgpu_demo.cpp siftgpu.cc siftgpu.h types_.cc types_.h utils_.cc utils_.h ${UTIL_SRC})
target_link_libraries(sift_gpu_demo ${OpenCV_LIBS} ${VLFEAT_LIBRARY}  ${SIFTGPU_LIBRARY} ${FLANN_LIBRARY} CUDA::cudart)
